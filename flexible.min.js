/**
 * author: WangLe
 * github: [https://github.com/jiankafei]
 * 博客: [https://jiankafei.github.io/]
 */
;(function(b,e){'use strict';function k(){(b.devicePixelRatio?Math.floor(b.devicePixelRatio):1)!==a&&b.location.reload();var c=n();540<c&&(c=540);c=b.parseFloat(a*c*100/750);f.style.fontSize=c+"px";l.rem=b.rem=c}function p(c){var b=f.firstElementChild,a=d.createElement("style");a.type="text/css";a.styleSheet&&a.styleSheet.cssText?a.styleSheet.cssText=c:a.appendChild(d.createTextNode(c));b.appendChild(a);return a}var d=b.document,f=d.documentElement,g=null,a=(g=f.getAttribute("data-dpr")||"")?g:b.devicePixelRatio?Math.floor(b.devicePixelRatio):1,m=1/a,l=e.flexible||(e.flexible={}),h=null;e=function(){var c=b.navigator.appVersion,a="pc";/(iPhone|iPod|iPad)/i.test(c)?a="ios":/(Android)/i.test(c)?a="android":/(Windows Phone)/i.test(c)?a="wp":a="pc";return a}();var n=function(){return f.getBoundingClientRect().width/a};"pc"!==e&&f.getBoundingClientRect().width/a<b.screen.width&&(n=function(){return b.screen.width});f.setAttribute("data-dpr",a);"pc"===e&&p("::-webkit-scrollbar{display: none !important}html, .fixed{margin-left: auto !important;margin-right: auto !important;width: "+414*a+"px !important;");g=d.createElement("meta");g.setAttribute("name","viewport");g.setAttribute("content","initial-scale\x3d"+m+", maximum-scale\x3d"+m+", minimum-scale\x3d"+m+", user-scalable\x3dno");e=null;f.firstElementChild?f.firstElementChild.appendChild(g):(e=d.createElement("div"),e.appendChild(g),d.write(e.innerHTML));b.addEventListener("resize",function(){clearTimeout(h);h=b.setTimeout(k,300)},!1);b.addEventListener("pageshow",function(a){a.persisted&&(clearTimeout(h),h=b.setTimeout(k,300))},!1);void 0!==b.orientation&&b.addEventListener("orientationchange",function(){clearTimeout(h);h=b.setTimeout(k,300)},!1);"complete"===d.readyState?d.body.style.fontSize=12*a+"px":d.addEventListener("DOMContentLoaded",function(b){d.body.style.fontSize=12*a+"px"},!1);k();l.dpr=b.dpr=a;l.trans=k;l.rem2px=function(a){var c=b.parseFloat(a)*this.rem;"string"===typeof a&&a.match(/rem$/)&&(c+="px");return c};l.px2rem=function(a){var c=b.parseFloat(a)/100;"string"===typeof a&&a.match(/px$/)&&(c+="rem");return c}})(window,window.lib||(window.lib={}));
